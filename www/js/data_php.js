var php_1 = [
    // Настройки apache (.htaccess)
    [
        'Options Indexes FollowSymLinks',
        '(htaccess) Настройка, показывающая содержимое директорий при отсутствии файла по-умолчанию',
        /^\s*Options\s+Indexes\s+FollowSymLinks\s*$/,
        '(htaccess) Настройка, показывающая содержимое директорий при отсутствии файла по-умолчанию'
    ],[
        'Options -Indexes FollowSymLinks',
        '(htaccess) Настройка, скрывающая содержимое директорий при отсутствии файла по-умолчанию',
        /^\s*Options\s*\-Indexes\s*FollowSymLinks\s*$/,
        '(htaccess) Настройка, скрывающая содержимое директорий при отсутствии файла по-умолчанию'
    ],[
        'DirectoryIndex f',
        '(htaccess) Настройка, устанавливающая файл (f) в качестве файла по-умолчанию',
        /^\s*DirectoryIndex\s*f\s*$/,
        '(htaccess) Настройка, устанавливающая файл (f) в качестве файла по-умолчанию'
    ],[
        'php_flag d on',
        '(htaccess) Настройка php.ini. Устанавливаем директиву (d) в состояние (on)',
        /^\s*php\_flag\s+d\s+on\s*$/,
        '(htaccess) Настройка php.ini. Устанавливаем директиву (d) в состояние (on)'
    ],
    // Настройки РНР
    [
        'short_open_tag',
        '(Настройки РНР) Отвечает за включение коротких тегов',
        /^\s*short_open_tag\s*$/,
        '(Настройки РНР) Отвечает за включение коротких тегов'
    ],[
        'display_errors',
        '(Настройки РНР) Отвечает за отображение ошибок на мониторе',
        /^\s*display_errors\s*$/,
        '(Настройки РНР) Отвечает за отображение ошибок на мониторе'
    ],[
        'error_reporting',
        '(Настройки РНР) Указывает, какие уровни ошибок показывать',
        /^\s*error_reporting\s*$/,
        '(Настройки РНР) Указывает, какие уровни ошибок показывать'
    ],[
        'post_max_size',
        '(Настройки РНР) Максимальный размер содержимого, отправляемого формой',
        /^\s*post_max_size\s*$/,
        '(Настройки РНР) Максимальный размер содержимого, отправляемого формой'
    ],
    // Уровни ошибок
    [
        'E_PARSE',
        '(Уровни ошибок) Ошибка, возникшая до начала выполнения кода. (Как правило синтаксическая)',
        /^\s*E_PARSE\s*$/,
        '(Уровни ошибок) Ошибка, возникшая до начала выполнения кода. (Как правило синтаксическая)'
    ],[
        'E_ERROR',
        '(Уровни ошибок) Ошибка, возникшая после начала выполнения кода. Фатальная ошибка. Код останавливается',
        /^\s*E_ERROR\s*$/,
        '(Уровни ошибок) Ошибка, возникшая после начала выполнения кода. Фатальная ошибка. Код останавливается'
    ],[
        'E_WARNING',
        '(Уровни ошибок) Ошибка, возникшая после начала выполнения кода. Не существенная ошибка. Код продолжается',
        /^\s*E_WARNING\s*$/,
        '(Уровни ошибок) Ошибка, возникшая после начала выполнения кода. Не существенная ошибка. Код продолжается'
    ],[
        'E_NOTICE',
        '(Уровни ошибок) Предупреждение, возникающее при несерьезных ошибках (напр. обращение к несуществующей переменной)',
        /^\s*E_NOTICE\s*$/,
        '(Уровни ошибок) Предупреждение, возникающее при несерьезных ошибках (напр. обращение к несуществующей переменной)'
    ],[
        'E_ALL',
        '(Уровни ошибок) Все уровни ошибок',
        /^\s*E_ALL\s*$/,
        '(Уровни ошибок) Все уровни ошибок'
    ],
    // Типы данных
    [
        'Integer',
        '(Типы данных) Целочисленный тип данных',
        /^\s*(I|i)nteger\s*$/,
        '(Типы данных) Целочисленный тип данных'
    ],[
        'Float',
        '(Типы данных) Дробный (вещественный) тип данных',
        /^\s*(F|f)loat\s*$/,
        '(Типы данных) Дробный (вещественный) тип данных'
    ],[
        'String',
        '(Типы данных) Строчный тип данных',
        /^\s*(S|s)tring\s*$/,
        '(Типы данных) Строчный тип данных'
    ],[
        'Boolean',
        '(Типы данных) Логический тип данных',
        /^\s*(B|b)oolean\s*$/,
        '(Типы данных) Логический тип данных'
    ],[
        'NULL',
        '(Типы данных) Если переменой не присвоено значение или не определена',
        /^\s*null\s*$/i,
        '(Типы данных) Если переменой не присвоено значение или не определена'
    ],[
        'Array',
        '(Типы данных) Массив',
        /^\s*(A|a)rray\s*$/i,
        '(Типы данных) Массив'
    ],[
        'Resource',
        '(Типы данных) Ссылка на внешний ресурс',
        /^\s*(R|r)esource\s*$/i,
        '(Типы данных) Ссылка на внешний ресурс'
    ],[
        'Object',
        '(Типы данных) Объект',
        /^\s*(O|o)bject\s*$/i,
        '(Типы данных) Объект'
    ],
    // Конструкции языка
    [
        '&$v',
        '(Конструкция языка) Ссылка на переменную ($v)',
        /^\s*\&\$v\s*$/,
        '(Конструкция языка) Ссылка на переменную ($v)'
    ],[
        '$$v',
        '(Конструкция языка) Переменная переменной ($v)',
        /^\s*\$\$v\s*$/,
        '(Конструкция языка) Переменная переменной ($v)'
    ],[
        'echo s',
        '(Конструкция языка) Выводит на экран строку (s). Никакого значения не возвращает',
        /^\s*echo((\s*\()|(\s+))s\s*\)?\s*$/,
        '(Конструкция языка) Выводит на экран строку (s). Никакого значения не возвращает'
    ],[
        'print s',
        '(Конструкция языка) Выводит на экран строку (s). Всегда возвращает значение 1',
        /^\s*print((\s*\()|(\s+))s\s*\)?\s*$/,
        '(Конструкция языка) Выводит на экран строку (s). Всегда возвращает значение 1'
    ],[
        's{i}',
        '(Конструкция языка) Получаем из строки (s) символ с индексом (i)',
        /^\s*s\s*{\s*i\s*}\s*$/,
        '(Конструкция языка) Получаем из строки (s) символ с индексом (i)'
    ],[
        '(int)v',
        '(Конструкция языка) Приведение переменной (v) к целочисленному типу данных',
        /^\s*\(\s*int(eger)?\s*\)\s*v\s*$/,
        '(Конструкция языка) Приведение переменной (v) к целочисленному типу данных'
    ],[
        '(float)v',
        '(Конструкция языка) Приведение переменной (v) к дробному числовому типу данных',
        /^\s*\(\s*(float|double|real)\s*\)\s*v\s*$/,
        '(Конструкция языка) Приведение переменной (v) к дробному числовому типу данных'
    ],[
        '(bool)v',
        '(Конструкция языка) Приведение переменной (v) к логическому типу данных',
        /^\s*\(\s*bool(ean)?\s*\)\s*v\s*$/,
        '(Конструкция языка) Приведение переменной (v) к логическому типу данных'
    ],[
        '(string)v',
        '(Конструкция языка) Приведение переменной (v) к строковому типу данных',
        /^\s*\(\s*string\s*\)\s*v\s*$/,
        '(Конструкция языка) Приведение переменной (v) к строковому типу данных'
    ],[
        '(array)v',
        '(Конструкция языка) Приведение переменной (v) к массиву',
        /^\s*\(\s*array\s*\)\s*v\s*$/,
        '(Конструкция языка) Приведение переменной (v) к массиву'
    ],[
        '(object)v',
        '(Конструкция языка) Приведение переменной (v) к object',
        /^\s*\(\s*object\s*\)\s*v\s*$/,
        '(Конструкция языка) Приведение переменной (v) к object'
    ],[
        '(unset)v',
        '(Конструкция языка) Приведение переменной (v) к типу NULL',
        /^\s*\(\s*unset\s*\)\s*v\s*$/,
        '(Конструкция языка) Приведение переменной (v) к типу NULL'
    ],[
        'const N = s',
        '(Конструкция языка) Объявление константы (N) со значением (s). >= PHP 5.3',
        /^\s*const\s+N\s*=\s*s\s*$/,
        '(Конструкция языка) Объявление константы (N) со значением (s). >= PHP 5.3'
    ],[
        'a[] = e',
        '(Конструкция языка) Добавляем в массив (a) элемент (e) с индексом на один больше максимального',
        /^\s*a\s*\[\s*\]\s*=\s*e\s*$/,
        '(Конструкция языка) Добавляем в массив (a) элемент (e) с индексом на один больше максимального'
    ],[
        'a[i] = e',
        '(Конструкция языка) Добавляем в массив (а) элемент (е) с индексом (i)',
        /^\s*a\s*\[\s*i\s*\]\s*=\s*e\s*$/,
        '(Конструкция языка) Добавляем в массив (а) элемент (е) с индексом (i)'
    ],[
        'a[k] = e',
        '(Конструкция языка) Добавляем в массив (а) элемент (е) с строковым ключем (k)',
        /^\s*a\s*\[\s*k\s*\]\s*=\s*e\s*$/,
        '(Конструкция языка) Добавляем в массив (а) элемент (е) с строковым ключем (k)'
    ],[
        'break',
        '(Конструкция языка) Команда прерывания цикла',
        /^\s*break\s*$/,
        '(Конструкция языка) Команда прерывания цикла'
    ],[
        'continue',
        '(Конструкция языка) Команда прерывания итерации цикла',
        /^\s*continue\s*$/,
        '(Конструкция языка) Команда прерывания итерации цикла'
    ],[
        'global v',
        '(Конструкция языка) Ключевое слово, обращающееся из глобальной области функции к глобальной переменной (v)',
        /^\s*global\s+v\s*$/,
        '(Конструкция языка) Ключевое слово, обращающееся из глобальной области функции к глобальной переменной (v)',
    ],[
        'static v',
        '(Конструкция языка) Ключевое слово, локальная переменная (v) при выходе из функции сохраняет свое значение',
        /^\s*static\s+v\s*$/,
        '(Конструкция языка) Ключевое слово, локальная переменная (v) при выходе из функции сохраняет свое значение',
    ],[
        'f(a = v)',
        '(Конструкция языка) Функция (f) содержащая аргумент по умолчанию (a) со значением (v)',
        /^\s*f\s*\(\s*a\s*=\s*v\s*\)\s*$/,
        '(Конструкция языка) Функция (f) содержащая аргумент по умолчанию (a) со значением (v)',
    ],[
        'return',
        '(Конструкция языка) Оператор возврата функции',
        /^\s*return\s*$/,
        '(Конструкция языка) Оператор возврата функции',
    ],[
        'list(v1, v2, v3) = f()',
        '(Конструкция языка) Функция (f) возвращает массив из трех значений. Принимаем эти значения и помещаем соответственно в переменные (v1), (v2), (v3)',
        /^\s*list\s*\(\s*v1\s*,\s*v2\s*,\s*v3\s*\)\s*=\s*f\s*\(\s*\)\s*$/,
        '(Конструкция языка) Функция (f) возвращает массив из трех значений. Принимаем эти значения и помещаем соответственно в переменные (v1), (v2), (v3)',
    ],[
        'v = f()[i]',
        '(Конструкция языка) Разыменование массивов. Функция (f) возвращает массив значений. Принимаем в переменную (v) элемент массива с индексом (i)',
        /^\s*v\s*=\s*f\s*\(\s*\)\s*\[\s*i\s*\]\s*$/,
        '(Конструкция языка) Разыменование массивов. Функция (f) возвращает массив значений. Принимаем в переменную (v) элемент массива с индексом (i)',
    ],
    // Глобальные массивы
    [
        '$GLOBALS',
        '(Глобальные массивы) Суперглобальный массив, содержащий все глобальные переменные',
        /^\s*\$GLOBALS\s*$/,
        '(Глобальные массивы) Суперглобальный массив, содержащий все глобальные переменные',
    ],
    // Уточнение типа (type-hint)
    [
        'function f(array v)',
        '(Уточнение типа (type-hint)) Объявление функции (f) ожидающей агрумент (v) типа массив',
        /^\s*function\s+f\s*\(array\s+v\s*\)\s*$/,
        '(Уточнение типа (type-hint)) Объявление функции (f) ожидающей агрумент (v) типа массив',
    ],[
        'function f(collable v)',
        '(Уточнение типа (type-hint)) Объявление функции (f) ожидающей агрумент (v) в виде чего-то, что можно вызвать',
        /^\s*function\s+f\s*\(collable\s*v\s*\)\s*$/,
        '(Уточнение типа (type-hint)) Объявление функции (f) ожидающей агрумент (v) в виде чего-то, что можно вызвать',
    ],
    // Функции для работы с переменными
    [
        'gettype(v)',
        '(Функции для работы с переменными) Возвращает тип переменной (v)',
        /^\s*gettype\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Возвращает тип переменной (v)'
    ],[
        'settype(v, t)',
        '(Функции для работы с переменными) Конвертирует переменную (v) в тип данных (t). Используется редко',
        /^\s*settype\s*\(\s*v\s*,\s*t\s*\)\s*$/,
        '(Функции для работы с переменными) Конвертирует переменную (v) в тип данных (t). Используется редко'
    ],[
        'unset(v)',
        '(Функции для работы с переменными) Удаляет переменную (v)',
        /^\s*unset\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Удаляет переменную (v)'
    ],[
        'isset(v)',
        '(Функции для работы с переменными) Проверка, была ли определена переменая (v). Возвращает логическое значение',
        /^\s*isset\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Проверка, была ли определена переменая (v). Возвращает логическое значение'
    ],[
        'empty(v)',
        '(Функции для работы с переменными) Проверка, является ли переменая (v) пустой. Возвращает логическое значение.',
        /^\s*empty\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Проверка, является ли переменая (v) пустой. Возвращает логическое значение.'
    ],[
        'print_r(v)',
        '(Функции для работы с переменными) Выводит информацию о переменной (v) в удобочитаемом виде.',
        /^\s*print_r\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Выводит информацию о переменной (v) в удобочитаемом виде.'
    ],[
        'var_dump(v)',
        '(Функции для работы с переменными) Отображает структурированную информацию об переменной (v), включая их тип и значение. Массивы и объекты анализируются рекурсивно.',
        /^\s*var_dump\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Отображает структурированную информацию об переменной (v), включая их тип и значение. Массивы и объекты анализируются рекурсивно.'
    ],[
        'is_array(v)',
        '(Функции для работы с переменными) Определяет, является ли переменная (v) массивом',
        /^\s*is_array\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Определяет, является ли переменная (v) массивом',
    ],[
        'is_bool(v)',
        '(Функции для работы с переменными) Проверяет, является ли переменная (v) булевой',
        /^\s*is_bool\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Проверяет, является ли переменная (v) булевой',
    ],[
        'is_float(v)',
        '(Функции для работы с переменными) Проверяет, является ли переменная (v) числом с плавающей точкой',
        /^\s*is_float\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Проверяет, является ли переменная (v) числом с плавающей точкой',
    ],[
        'is_int(v)',
        '(Функции для работы с переменными) Проверяет, является ли переменная (v) переменной целочисленного типа',
        /^\s*is_int\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Проверяет, является ли переменная (v) переменной целочисленного типа',
    ],[
        'is_null(v)',
        '(Функции для работы с переменными) Проверяет, является ли значение переменной (v) равным NULL',
        /^\s*is_null\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Проверяет, является ли значение переменной (v) равным NULL',
    ],[
        'is_string(v)',
        '(Функции для работы с переменными) Проверяет, является ли переменная (v) строкой',
        /^\s*is_string\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Проверяет, является ли переменная (v) строкой',
    ],[
        'is_numeric(v)',
        '(Функции для работы с переменными) Проверяет, является ли переменная числом или строкой, содержащей число',
        /^\s*is_numeric\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Проверяет, является ли переменная числом или строкой, содержащей число',
    ],[
        'intval(v)',
        '(Функции для работы с переменными) Возвращает целое значение переменной (v)',
        /^\s*intval\s*\(\s*v\s*\)\s*$/,
        '(Функции для работы с переменными) Возвращает целое значение переменной (v)',
    ],[
        'get_defined_vars()',
        '(Функции для работы с переменными) Возвращает массив всех определенных переменных',
        /^\s*get_defined_vars\s*\(\s*\)\s*$/,
        '(Функции для работы с переменными) Возвращает массив всех определенных переменных',
    ],
    // Функции для обработки строк
    [
        'setlocale(c, s)',
        '(Функции для обработки строк) Устанавливает настройки локали. В именованную константу (c) устанавливается строковое значение (s)',
        /^\s*setlocale\s*\(\s*c\s*\,\s*s\s*\)\s*$/,
        '(Функции для обработки строк) Устанавливает настройки локали. В именованную константу (c) устанавливается строковое значение (s)'
    ],[
        'strlen(s)',
        '(Функции для обработки строк) Возвращает длину строки (s)',
        /^\s*strlen\s*\(\s*s\s*\)\s*$/,
        '(Функции для обработки строк) Возвращает длину строки (s)'
    ],[
        'explode(d, s)',
        '(Функции для обработки строк) Возвращает массив строк, полученных разбиением строки (s) с использованием (d) в качестве разделителя',
        /^\s*explode\s*\(\s*d\s*,\s*s\s*\)\s*$/,
        '(Функции для обработки строк) Возвращает массив строк, полученных разбиением строки (s) с использованием (d) в качестве разделителя',
    ],[
        'substr_count(s1, s2)',
        '(Функции для обработки строк) Возвращает число вхождений подстроки (s2) в строку (s1)',
        /^\s*substr_count\s*\(\s*s1\s*,\s*s2\s*\)\s*$/,
        '(Функции для обработки строк) Возвращает число вхождений подстроки (s2) в строку (s1)',
    ],[
        'rtrim(s)',
        '(Функции для обработки строк) Удаляет пробелы (или другие символы) из конца строки (s)',
        /^\s*rtrim\s*\(\s*s\s*\)\s*$/,
        '(Функции для обработки строк) Удаляет пробелы (или другие символы) из конца строки (s)',
    ],[
        'ltrim(s)',
        '(Функции для обработки строк) Удаляет пробелы (или другие символы) из начала строки (s)',
        /^\s*ltrim\s*\(\s*s\s*\)\s*$/,
        '(Функции для обработки строк) Удаляет пробелы (или другие символы) из начала строки (s)',
    ],[
        'trim(s)',
        '(Функции для обработки строк) Удаляет пробелы (или другие символы) из начала и конца строки (s)',
        /^\s*trim\s*\(\s*s\s*\)\s*$/,
        '(Функции для обработки строк) Удаляет пробелы (или другие символы) из начала и конца строки (s)',
    ],[
        'strtolower(s)',
        '(Функции для обработки строк) Преобразует строку (s) в нижний регистр',
        /^\s*strtolower\s*\(\s*s\s*\)\s*$/,
        '(Функции для обработки строк) Преобразует строку (s) в нижний регистр',
    ],[
        'strtoupper(s)',
        '(Функции для обработки строк) Преобразует строку (s) в верхний регистр',
        /^\s*strtoupper\s*\(\s*s\s*\)\s*$/,
        '(Функции для обработки строк) Преобразует строку (s) в верхний регистр',
    ],[
        'lcfirst(s)',
        '(Функции для обработки строк) Преобразует первый символ строки (s) в нижний регистр',
        /^\s*lcfirst\s*\(\s*s\s*\)\s*$/,
        '(Функции для обработки строк) Преобразует первый символ строки (s) в нижний регистр',
    ],[
        'ucfirst(s)',
        '(Функции для обработки строк) Преобразует первый символ строки (s) в верхний регистр',
        /^\s*ucfirst\s*\(\s*s\s*\)\s*$/,
        '(Функции для обработки строк) Преобразует первый символ строки (s) в верхний регистр',
    ],[
        'printf(f)',
        '(Функции для обработки строк) Выводит строку, отформатированную в соответствии с аргументом (f). Возвращает длину выведенной строки',
        /^\s*printf\s*\(\s*f\s*\)\s*$/,
        '(Функции для обработки строк) Выводит строку, отформатированную в соответствии с аргументом (f). Возвращает длину выведенной строки',
    ],[
        'substr(s, b, l)',
        '(Функции для обработки строк) Возвращает подстроку строки (s), начинающейся с (b) символа по счету и длиной (l) символов',
        /^\s*substr\s*\(\s*s\s*,\s*b\s*,\s*l\s*,\s*\)\s*$/,
        '(Функции для обработки строк) Возвращает подстроку строки (s), начинающейся с (b) символа по счету и длиной (l) символов',
    ],[
        'str_replace(s, r, str)',
        '(Функции для обработки строк) Возвращает строку или массив, в котором все вхождения подстроки (s) в строке (str) заменены на (r)',
        /^\s*substr\s*\(\s*s\s*,\s*r\s*,\s*str\s*,\s*\)\s*$/,
        '(Функции для обработки строк) Возвращает строку или массив, в котором все вхождения подстроки (s) в строке (str) заменены на (r)',
    ],
    // Функции для работы с массивами
    [
        'count(a)',
        '(Функции для работы с массивами) Подсчитывает количество элементов массива (a) или что-то в объекте',
        /^\s*count\s*\(\s*a\s*\)\s*$/,
        '(Функции для работы с массивами) Подсчитывает количество элементов массива (a) или что-то в объекте'
    ],[
        'current(a)',
        '(Функции для работы с массивами) Возвращает текущий элемент массива (a)',
        /^\s*current\s*\(\s*a\s*\)\s*$/,
        '(Функции для работы с массивами) Возвращает текущий элемент массива (a)'
    ],[
        'next(a)',
        '(Функции для работы с массивами) Передвигает внутренний указатель массива (a) на одну позицию вперёд',
        /^\s*next\s*\(\s*a\s*\)\s*$/,
        '(Функции для работы с массивами) Передвигает внутренний указатель массива (a) на одну позицию вперёд'
    ],[
        'end(a)',
        '(Функции для работы с массивами) Устанавливает внутренний указатель массива (a) на его последний элемент',
        /^\s*end\s*\(\s*a\s*\)\s*$/,
        '(Функции для работы с массивами) Устанавливает внутренний указатель массива (a) на его последний элемент'
    ],[
        'prev(a)',
        '(Функции для работы с массивами) Передвигает внутренний указатель массива (a) на одну позицию назад',
        /^\s*prev\s*\(\s*a\s*\)\s*$/,
        '(Функции для работы с массивами) Передвигает внутренний указатель массива (a) на одну позицию назад'
    ],[
        'reset(a)',
        '(Функции для работы с массивами) Устанавливает внутренний указатель массива (a) на его первый элемент',
        /^\s*reset\s*\(\s*a\s*\)\s*$/,
        '(Функции для работы с массивами) Устанавливает внутренний указатель массива (a) на его первый элемент'
    ],[
        'key(a)',
        '(Функции для работы с массивами) Возвращает индекс текущего элемента массива (a)',
        /^\s*key\s*\(\s*a\s*\)\s*$/,
        '(Функции для работы с массивами) Возвращает индекс текущего элемента массива (a)'
    ],
    // Управление функциями
    [
        'function_exists(f)',
        '(Управление функциями) Возвращает TRUE, если указанная функция (f) определена',
        /^\s*function_exists\s*\(\s*f\s*\)\s*$/,
        '(Управление функциями) Возвращает TRUE, если указанная функция (f) определена',
    ],[
        'func_num_args()',
        '(Управление функциями) Возвращает количество аргументов, переданных функции',
        /^\s*func_num_args\s*\(\s*\)\s*$/,
        '(Управление функциями) Возвращает количество аргументов, переданных функции',
    ],[
        'func_get_args()',
        '(Управление функциями) Возвращает массив, содержащий аргументы функции',
        /^\s*func_get_args\s*\(\s*\)\s*$/,
        '(Управление функциями) Возвращает массив, содержащий аргументы функции',
    ],[
        'func_get_arg(i)',
        '(Управление функциями) Возвращает элемент из списка аргументов по индексу (i)',
        /^\s*func_get_arg\s*\(\s*i\s*\)\s*$/,
        '(Управление функциями) Возвращает элемент из списка аргументов по индексу (i)',
    ],
    // Математические функции
    [
        'abs(n)',
        '(Математические функции) Возвращает модуль числа (n)',
        /^\s*abs\s*\(\s*n\s*\)\s*$/,
        '(Математические функции) Возвращает модуль числа (n)',
    ],[
        'max(n1, n2, n3)',
        '(Математические функции) Возвращает наибольшее значение из чисел (n1), (n2), (n3)',
        /^\s*max\s*\(\s*n1\s*,\s*n2\s*,\s*n3\s*\)\s*$/,
        '(Математические функции) Возвращает наибольшее значение из чисел (n1), (n2), (n3)',
    ],[
        'min(n1, n2, n3)',
        '(Математические функции) Возвращает наименьшее значение из чисел (n1), (n2), (n3)',
        /^\s*min\s*\(\s*n1\s*,\s*n2\s*,\s*n3\s*\)\s*$/,
        '(Математические функции) Возвращает наименьшее значение из чисел (n1), (n2), (n3)',
    ],[
        'rand(min, max)',
        '(Математические функции) Генерирует случайное число в диапазоне от (min) до (max)',
        /^\s*rand\s*\(\s*min\s*,\s*max\s*\)\s*$/,
        '(Математические функции) Генерирует случайное число в диапазоне от (min) до (max)',
    ],[
        'round(n, c)',
        '(Математические функции) Округляет число (n) типа float до (с) знаков после запятой',
        /^\s*round\s*\(\s*n\s*,\s*c\s*\)\s*$/,
        '(Математические функции) Округляет число (n) типа float до (с) знаков после запятой',
    ],[
        'ceil(n)',
        '(Математические функции) Округляет дробь (n) в большую сторону',
        /^\s*ceil\s*\(\s*n\s*\)\s*$/,
        '(Математические функции) Округляет дробь (n) в большую сторону',
    ],[
        'floor(n)',
        '(Математические функции) Округляет дробь (n) в меньшую сторону',
        /^\s*floor\s*\(\s*n\s*\)\s*$/,
        '(Математические функции) Округляет дробь (n) в меньшую сторону',
    ],
    // Функции даты и времени
    [
        'strftime(f)',
        '(Функции даты и времени) Форматирует текущую дату/время с учетом текущих настроек локали и настроек формата (f)',
        /^\s*strftime\s*\(\s*f\s*\)\s*$/,
        '(Функции даты и времени) Форматирует текущую дату/время с учетом текущих настроек локали и настроек формата (f)'
    ],
    // Информационные Функции
    [
        'phpinfo()',
        '(Информационные Функции) Выводит информацию о текущей конфигурации PHP',
        /^\s*phpinfo\s*\(\s*\)\s*$/,
        '(Информационные Функции) Выводит информацию о текущей конфигурации PHP'
    ],[
        'ini_set(d, v)',
        '(Информационные Функции) Установка значения настройки конфигурации PHP. Директива (d) устанавливается в значение (v)',
        /^\s*ini_set\s*\(\s*d\s*\,\s*v\s*\)\s*$/,
        '(Информационные Функции) Установка значения настройки конфигурации PHP. Директива (d) устанавливается в значение (v)'
    ],
    // Функции обработки ошибок
    [
        'error_reporting(e)',
        '(Функции обработки ошибок) Задает, какие уровни ошибок PHP (e) попадут в отчет',
        /^\s*error_reporting\s*\(\s*e\s*\)\s*$/,
        '(Функции обработки ошибок) Задает, какие уровни ошибок PHP (e) попадут в отчет'
    ],
    // Разные Функции
    [
        'define(c, v)',
        '(Разные Функции) Определяет именованную константу (c) с значением (v)',
        /^\s*define\s*\(\s*c\s*\,\s*v\s*\)\s*$/,
        '(Разные Функции) Определяет именованную константу (c) с значением (v)'
    ]
];